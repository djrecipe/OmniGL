<map id="OmniOGL::BlockArray::Draw" name="OmniOGL::BlockArray::Draw">
<area shape="rect" id="node2" href="$class_omni_o_g_l_1_1_ren_obj.html#a255d93ed0e0f4827b47dacc68eac6c36" title="This method lies at the heart of the rendering process, as it binds the object&#39;s relevant data to the..." alt="" coords="206,5,431,32"/>
<area shape="rect" id="node4" href="$class_omni_o_g_l_1_1_ren_obj.html#a0a4218e288329f8e7b17081670948c9d" title="This method attempts to handle all of the necessary OpenGL state changes in one place. The desired value of various states are stored as a local variable owned by the object. This method is called for each object each frame and simply sets each state to the position specified by the object." alt="" coords="227,56,411,83"/>
<area shape="rect" id="node6" href="$class_omni_o_g_l_1_1_ren_obj.html#a12f940283cf317910410fb2014ff789f" title="OmniOGL::RenObj::ebo" alt="" coords="239,107,399,133"/>
<area shape="rect" id="node8" href="$class_omni_o_g_l_1_1_o_g_l_matrices.html#acf36e7ad27e383dfdd30095dd1b97b0a" title="This method is intended to offer a simple way to set the translation matrix via a set of x..." alt="" coords="236,158,401,199"/>
<area shape="rect" id="node3" href="$class_omni_o_g_l_1_1_o_g_l_buffers.html#aee0431bf99d4f232db33ad6b10780088" title="OmniOGL::OGLBuffers::vbo" alt="" coords="481,5,663,32"/>
<area shape="rect" id="node5" href="$namespace_omni_o_g_l.html#ade1ba238a31a1003412522a2769d5945" title="OmniOGL::_Valid" alt="" coords="510,56,634,83"/>
<area shape="rect" id="node7" href="$class_omni_o_g_l_1_1_o_g_l_buffers.html#a7ca7cec35f1fee287bb2fa5a5a7b9472" title="OmniOGL::OGLBuffers::ebo" alt="" coords="480,107,664,133"/>
<area shape="rect" id="node9" href="$class_omni_o_g_l_1_1_o_g_l_matrices.html#aacb4830605589d383ded70ceec9b40bf" title="This method sends a combined translation*rotation*scale 4x4 matrix to the shader program, effectively configuring the size, orientation, and position of each vertex which is a candidate for rendering. The combined &quot;srt&quot; matrix is an attribute in the shader program, so it is sent via a vertex buffer object. Note that this method is capable of taking an array of matrices if a count is specified (second parameter), in order to accomodate instanced rendering. If no second parameter is passed, it is assumed that the first parameter only points to a single matrix. Scene::info.vbo" alt="" coords="489,158,655,199"/>
</map>
