<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.30.1 (20130214.1330)
 -->
<!-- Title: OmniOGL::Group::Draw Pages: 1 -->
<svg width="334pt" height="115pt"
 viewBox="0.00 0.00 334.00 115.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 111)">
<title>OmniOGL::Group::Draw</title>
<polygon fill="white" stroke="white" points="-4,5 -4,-111 331,-111 331,5 -4,5"/>
<!-- Node1 -->
<g id="node1" class="node"><title>Node1</title>
<polygon fill="#bfbfbf" stroke="black" points="0,-49.5 0,-68.5 120,-68.5 120,-49.5 0,-49.5"/>
<text text-anchor="middle" x="60" y="-56.5" font-family="Helvetica,sans-Serif" font-size="10.00">OmniOGL::Group::Draw</text>
</g>
<!-- Node2 -->
<g id="node2" class="node"><title>Node2</title>
<g id="a_node2"><a xlink:href="class_omni_o_g_l_1_1_ren_obj.html#af0c2ce990c74a67459352d89a02c757e" target="_top" xlink:title="This method lies at the heart of the rendering process, as it binds the object&#39;s relevant data to the...">
<polygon fill="white" stroke="black" points="156.5,-87.5 156.5,-106.5 325.5,-106.5 325.5,-87.5 156.5,-87.5"/>
<text text-anchor="middle" x="241" y="-94.5" font-family="Helvetica,sans-Serif" font-size="10.00">OmniOGL::RenObj::BindBufferData</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node2 -->
<g id="edge1" class="edge"><title>Node1&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M106.169,-68.589C130.216,-73.6939 159.974,-80.0113 185.319,-85.3918"/>
<polygon fill="midnightblue" stroke="midnightblue" points="184.647,-88.8269 195.156,-87.4799 186.1,-81.9795 184.647,-88.8269"/>
</g>
<!-- Node3 -->
<g id="node3" class="node"><title>Node3</title>
<g id="a_node3"><a xlink:href="class_omni_o_g_l_1_1_ren_obj.html#a0a4218e288329f8e7b17081670948c9d" target="_top" xlink:title="This method attempts to handle all of the necessary OpenGL state changes in one place. The desired value of various states are stored as a local variable owned by the object. This method is called for each object each frame and simply sets each state to the position specified by the object.">
<polygon fill="white" stroke="black" points="172,-49.5 172,-68.5 310,-68.5 310,-49.5 172,-49.5"/>
<text text-anchor="middle" x="241" y="-56.5" font-family="Helvetica,sans-Serif" font-size="10.00">OmniOGL::RenObj::Prepare</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node3 -->
<g id="edge2" class="edge"><title>Node1&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M120.107,-59C133.464,-59 147.846,-59 161.851,-59"/>
<polygon fill="midnightblue" stroke="midnightblue" points="161.962,-62.5001 171.962,-59 161.962,-55.5001 161.962,-62.5001"/>
</g>
<!-- Node4 -->
<g id="node4" class="node"><title>Node4</title>
<g id="a_node4"><a xlink:href="class_omni_o_g_l_1_1_o_g_l_matrices.html#aacb4830605589d383ded70ceec9b40bf" target="_top" xlink:title="This method sends a combined translation*rotation*scale 4x4 matrix to the shader program, effectively configuring the size, orientation, and position of each vertex which is a candidate for rendering. The combined &quot;srt&quot; matrix is an attribute in the shader program, so it is sent via a vertex buffer object. Note that this method is capable of taking an array of matrices if a count is specified (second parameter), in order to accomodate instanced rendering. If no second parameter is passed, it is assumed that the first parameter only points to a single matrix. Scene::info.vbo">
<polygon fill="white" stroke="black" points="179,-0 179,-30 303,-30 303,-0 179,-0"/>
<text text-anchor="start" x="187" y="-18" font-family="Helvetica,sans-Serif" font-size="10.00">OmniOGL::OGLMatrices</text>
<text text-anchor="middle" x="241" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">::UpdateSRT</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node4 -->
<g id="edge3" class="edge"><title>Node1&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M99.8403,-49.4527C119.994,-44.4988 145.257,-38.2888 168.764,-32.5105"/>
<polygon fill="midnightblue" stroke="midnightblue" points="169.836,-35.8513 178.711,-30.0654 168.165,-29.0537 169.836,-35.8513"/>
</g>
</g>
</svg>
